{"ast":null,"code":"import { FETCH_POSTS, NEW_POST } from './types';\nexport const fetchPosts = () => dispatch => {\n  // Dispatches FETCH_POSTS to the reducer\n  // dispatch is a resolver in a promise\n  // call dispatch whenever we want to send data to the store\n  fetch('http://jsonplaceholder.typicode.com/posts').then(res => res.json()).then(posts => dispatch({\n    type: FETCH_POSTS,\n    payload: posts\n  }));\n};\nexport const createPost = postData => dispatch => {\n  fetch('http://jsonplaceholder.typicode.com/posts', {\n    method: 'POST',\n    headers: {\n      'content-type': 'application/json'\n    },\n    body: JSON.stringify(post)\n  }).then(res => res.json()).then(data => console.log(data));\n};","map":{"version":3,"sources":["/Users/plomba327/Desktop/learning/reduxexample/src/actions/postActions.js"],"names":["FETCH_POSTS","NEW_POST","fetchPosts","dispatch","fetch","then","res","json","posts","type","payload","createPost","postData","method","headers","body","JSON","stringify","post","data","console","log"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAMC,QAAQ,IAAI;AAC1C;AACA;AACA;AACAC,EAAAA,KAAK,CAAC,2CAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,KAAK,IAAIL,QAAQ,CAAC;AACtBM,IAAAA,IAAI,EAAET,WADgB;AAEtBU,IAAAA,OAAO,EAAEF;AAFa,GAAD,CAFvB;AAMC,CAVI;AAYL,OAAO,MAAMG,UAAU,GAAIC,QAAD,IAAcT,QAAQ,IAAI;AAClDC,EAAAA,KAAK,CAAC,2CAAD,EAA8C;AACjDS,IAAAA,MAAM,EAAE,MADyC;AAEjDC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFwC;AAKjDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeC,IAAf;AAL2C,GAA9C,CAAL,CAOGb,IAPH,CAOQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPf,EAQGF,IARH,CAQQc,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CARhB;AASC,CAVI","sourcesContent":["import { FETCH_POSTS, NEW_POST } from './types'\n\nexport const fetchPosts = () => dispatch => {\n  // Dispatches FETCH_POSTS to the reducer\n  // dispatch is a resolver in a promise\n  // call dispatch whenever we want to send data to the store\n  fetch('http://jsonplaceholder.typicode.com/posts')\n  .then(res => res.json())\n  .then(posts => dispatch({\n    type: FETCH_POSTS,\n    payload: posts\n  }));\n  }\n\n  export const createPost = (postData) => dispatch => {\n    fetch('http://jsonplaceholder.typicode.com/posts', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(post)\n    })\n      .then(res => res.json())\n      .then(data => console.log(data));\n    }"]},"metadata":{},"sourceType":"module"}